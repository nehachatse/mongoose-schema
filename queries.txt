1 find all movies which are equal to movie_name
SQL: 
        select movie_name, production_year
        from movies
        where movie_name = "Foolish" 

MongoDB: 
        db.movies.find({"movie_name": "Foolish"}, {"_id": 0, "movie_name": 1, "production_year": 1})  

2 find all movies which are not equal to movie_name
SQL: 
        select movie_name, production_year
        from movies
        where movie_name <> "Foolish"

MongoDB: 
        db.movies.find({"movie_name": {"$ne":"Foolish"}}, {"_id": 0, "movie_name": 1, "production_year": 1})

3 find all movies greater than and greater than equal to a budget
SQL: 
        select movie_name, production_year
        from movies
        where budget >= 15000

MongoDB: 
        test> db.movies.find( {"budget": {"$gte": 15000}}, {"_id": 0, "movie_name": 1, "production_year":1} )

4 find all movies less than and less than equal to a budget
SQL: 
        select movie_name, production_year
        from movies
        where budget <= 15000

MongoDB: 
        db.movies.find( {"budget": {"$lte": 15000}}, {"_id": 0, "movie_name": 1, "production_year":1})

5 find all movies that are produced after 2000 with budget greater than 10000
SQL:    
        select movie_name, production_year
        from movies
        where production_year > 2000 and budget > 10000

MongoDB: 
        db.movies.find({"$and": [ {"production_year": {"$gt": 2000}},{"budget" : {"$gt": 10000}} ] }, {"_id": 0,"movie_name": 1, "production_year":1} )


6 find all movies that are produced after 2000 or budget greater than 10000
SQL:    
        select movie_name, production_year
        from movies
        where production_year > 2000 or budget > 10000

MongoDB: 
        db.movies.find({"$or": [ {"production_year": {"$gt": 2000}},{"budget" : {"$gt": 10000}} ] }, {"_id": 0, "movie_name": 1, "production_year":1} )

7 find all movies that are neither produced after 2000 nor with budget greater than 10000.
SQL:    
        select movie_name, production_year
        from movies
        where production_year < 2000 and budget < 10000
MongoDB: 
        db.movies.find({"$nor": [ {"production_year": {"$gt": 2000}},{"budget": {"$gt": 10000}} ] }, {"_id": 0, "movie_name": 1, "production_year":1} )

8 find all movies that are not produced in 2000 or they do not have budget of 10000
SQL:    
        select movie_name, production_year
        from movies
        where production_year != 2000 or budget != 10000
MongoDB: 
        db.movies.find( {"$or": [ {"production_year": {"$not": {"$eq": 2000 }}}, {"budget": {"$not": {"$eq": 10000}}}  ]}, {"_id": 0,"movie_name": 1, "production_year":1} )

9 find all movies that were produced from 2000 to 2010.
SQL:    
        select movie_name, production_year
        from movies
        where production_year BETWEEN 2000 and 2010
MongoDB: 
        db.movies.find( {"$and": [ {"production_year": {"$gte": 2000}}, {"production_year": {"$lte": 2010}} ]}, {"_id": 0, "movie_name": 1, "production_year":1} )

10 Sort all movies descending based on the production year and if the year is same then alphabetically for their movie_names
SQL:    
        select movie_name, production_year
        from movies
        ORDER BY production_year DESC, movie_name ASC

MongoDB: 
        db.movies.find( {}, {"_id":0, "movie_name": 1, "production_year": 1} ).sort({"production_year": -1, "movie_name": 1})

11 in query 10 skip the first 10 entries and fetch the next 5
SQL: 
A: db.movies.find().skip(10).limit(5)

12 remove movie genre from the first 10 movies in query 10.
MongoDB: db.movies.updateMany( {}, { $unset: {"movie_genre": ""}} ).limit(10) 